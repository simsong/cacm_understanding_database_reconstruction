;; -*- mode: lisp; -*-
;; Define variables and their domains
;; Households (either 1 or 2)
;;
;; HOUSEHOLD  SEX   AGE  RACE  MARITAL   RELATION
;;
;;     1      S=M   A=18 R=W   M=SA        #1        
;;     1      S=F   A=24 R=W   M=SA        SPO       

;;     2      S=M   A=30 R=W   M=MA        #1        
;;     2      S=F   A=36 R=B   M=MA        SPO       
;;     2      S=M   A=84 R=B   M=MA        PAR       
;;     2      S=F   A=8  R=B   M=SC        CHI       
;;     2      S=F   A=66 R=B   M=MA        PAR       

;; But we will report this sorted by age:


;; Problem setup 
#define USE_3A
#define USE_3B
#define USE_4A        
#define USE_SOLUTION   // for debugging

;; Sexes (0:female  1:male)
#define FEMALE 0
#define MALE   1
(int S1 FEMALE MALE) (int S2 FEMALE MALE) (int S3 FEMALE MALE) (int S4 FEMALE MALE)
(int S5 FEMALE MALE) (int S6 FEMALE MALE) (int S7 FEMALE MALE)

;; Ages (between 0 and 115 years old)
#define MIN_AGE 1
#define MAX_AGE 115
(int A1 MIN_AGE MAX_AGE) (int A2 MIN_AGE MAX_AGE) (int A3 MIN_AGE MAX_AGE) (int A4 MIN_AGE MAX_AGE)
(int A5 MIN_AGE MAX_AGE) (int A6 MIN_AGE MAX_AGE) (int A7 MIN_AGE MAX_AGE)

;; Races (0:black  1:white)
#define BLACK 0
#define WHITE 1
(int R1 BLACK WHITE) (int R2 BLACK WHITE) (int R3 BLACK WHITE) (int R4 BLACK WHITE)
(int R5 BLACK WHITE) (int R6 BLACK WHITE) (int R7 BLACK WHITE)

;; Marital Status (0:single  1:married)
#define SINGLE 0
#define MARRIED 1
(int M1 SINGLE MARRIED) (int M2 SINGLE MARRIED) (int M3 SINGLE MARRIED) (int M4 SINGLE MARRIED)
(int M5 SINGLE MARRIED) (int M6 SINGLE MARRIED) (int M7 SINGLE MARRIED)

;; Structural Zeros:
;;; Married people must be over 14. Set the minimum age based on the marriage flag
(< (if (= M1 MARRIED) 14 0) A1)
(< (if (= M2 MARRIED) 14 0) A2)
(< (if (= M3 MARRIED) 14 0) A3)
(< (if (= M4 MARRIED) 14 0) A4)
(< (if (= M5 MARRIED) 14 0) A5)
(< (if (= M6 MARRIED) 14 0) A6)
(< (if (= M7 MARRIED) 14 0) A7)


;; Assure that the output is sorted by age. This does a good job 
;; eliminating dupliate answers that simply have swapped records.
(<= A1 A2)
(<= A2 A3)
(<= A3 A4)
(<= A4 A5)
(<= A6 A7)

;; Reported tables

;; Statistic 1A: Total Pop: 7 / Median 30 / Average 38

;; Median age 30
;; The ages are sorted, so A4 must be 30.
(= A4 30)

; mean age: 38
(= (+ A1 A2 A3 A4 A5 A6 A7)
   (* 7 38))

;; Statistic 2A: Female:  n=4, median=30, average=33.5
(= (+ S1 S2 S3 S4 S5 S6 S7) 3)  ;; 4 female (0=female, 1=male)

;; Median age of female is 30

;; To solve this, we create some temporary variables:
;; FEMALEID1 FEMALEID2 FEMALEID3 FEMALEID4 - the ID number of each female, in order of ages
;; FEMALEAGE1 FEMALEAGE2 FEMALEAGE3 FEMALEAGE4 - the age of each female, in order of ages 
;;
;; So we kow that the average of FEMALEAGE2 and FEMALEA3 is 30

(int FEMALEID1 1 4)                     ; must leave room for 5, 6 and 7 to be female
(int FEMALEID2 2 5)                     ; must leave room for 1, 6 and 7 to be female
(int FEMALEID3 3 6)                     ; must leave room for 1, 2 and 7 to be female
(int FEMALEID4 4 7)                     ; must leave room for 1, 2 and 3 to be female

(< FEMALEID1 FEMALEID2)
(< FEMALEID2 FEMALEID3)
(< FEMALEID3 FEMALEID4)

;; Pigeon hole principle. If the IDs are in order, we only need to assure
;; that each ID maps to a female. We add the final equal and a -1 to force 
;; an error if there are not enough females.

(= FEMALEID1
   (if (= S1 FEMALE) 1
     (if (= S2 FEMALE) 2
       (if (= S3 FEMALE) 3
         (if (= S4 FEMALE) 4
           -1)))))


(= FEMALEID2
   (if (and (= S2 FEMALE) (< FEMALEID1 2)) 2
     (if (and (= S3 FEMALE) (< FEMALEID1 3)) 3
       (if (and (= S4 FEMALE) (< FEMALEID1 4)) 4
         (if (and (= S5 FEMALE) (< FEMALEID1 5)) 5
           -1)))))

(= FEMALEID3
   (if (and (= S3 FEMALE) (< FEMALEID2 3)) 3
     (if (and (= S4 FEMALE) (< FEMALEID2 4)) 4
       (if (and (= S5 FEMALE) (< FEMALEID2 5)) 5
         (if (and (= S6 FEMALE) (< FEMALEID2 6)) 6
           (if (and (= S7 FEMALE) (< FEMALEID2 7)) 7
             -1))))))

(= FEMALEID4
   (if (and (= S4 FEMALE) (< FEMALEID3 4)) 4
     (if (and (= S5 FEMALE) (< FEMALEID3 5)) 5
       (if (and (= S6 FEMALE) (< FEMALEID3 6)) 6
         (if (and (= S7 FEMALE) (< FEMALEID3 7)) 7
           -1)))))

;; Create temporary variables for the ages of these females
;; This uses the Sugar 
(int FEMALEAGE1 MIN_AGE MAX_AGE)
(int FEMALEAGE2 MIN_AGE MAX_AGE)
(int FEMALEAGE3 MIN_AGE MAX_AGE)
(int FEMALEAGE4 MIN_AGE MAX_AGE)

(< FEMALEAGE1 FEMALEAGE2)
(< FEMALEAGE2 FEMALEAGE3)
(< FEMALEAGE3 FEMALEAGE4)

;; Fix the female ages to the person ages
(element FEMALEID1 (A1 A2 A3 A4 A5 A6 A7) FEMALEAGE1)
(element FEMALEID2 (A1 A2 A3 A4 A5 A6 A7) FEMALEAGE2)
(element FEMALEID3 (A1 A2 A3 A4 A5 A6 A7) FEMALEAGE3)
(element FEMALEID4 (A1 A2 A3 A4 A5 A6 A7) FEMALEAGE4)

;; The average of these is 30, so their sum is 60
(= (+ FEMALEAGE2 FEMALEAGE3) 60)

;;;;;;;;;;;;;;;; end median calculation

; average female age  = 33.5
(= (+ (if (= S1 FEMALE) A1 0)  
      (if (= S2 FEMALE) A2 0)
      (if (= S3 FEMALE) A3 0)
      (if (= S4 FEMALE) A4 0)
      (if (= S5 FEMALE) A5 0)
      (if (= S6 FEMALE) A6 0)
      (if (= S7 FEMALE) A7 0)
      )
   134) ; 33.5 * 4

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; 2B Male:  n=3, median=30, average=44

(= (+ (if (= S1 MALE) 1 0)  
      (if (= S2 MALE) 1 0)
      (if (= S3 MALE) 1 0)
      (if (= S4 MALE) 1 0)
      (if (= S5 MALE) 1 0)
      (if (= S6 MALE) 1 0)
      (if (= S7 MALE) 1 0)
      )
   3) 


;; constraints for median. There are only 3 men, so we know that Male #2 is 30

(int MALEID1 1 5)                     ; must leave room for 6 and 7 to be male
(int MALEID2 2 6)                     ; must leave room for 1 and 7 to be male
(int MALEID3 3 7)                     ; must leave room for 1 and 2 to be male

(< MALEID1 MALEID2)
(< MALEID2 MALEID3)

;; Pigeon hole principle. If the IDs are in order, we only need to assure
;; that each ID maps to a female. We add the final equal and a -1 to force 
;; an error if there are not enough females.
(= MALEID1
   (if (= S1 MALE) 1
     (if (= S2 MALE) 2
       (if (= S3 MALE) 3
         (if (= S4 MALE) 4
           (if (= S5 MALE) 5
             -1))))))


(= MALEID2
   (if (and (= S2 MALE) (< MALEID1 2)) 2
     (if (and (= S3 MALE) (< MALEID1 3)) 3
       (if (and (= S4 MALE) (< MALEID1 4)) 4
         (if (and (= S5 MALE) (< MALEID1 5)) 5
           (if (and (= S6 MALE) (< MALEID1 6)) 6
             -1))))))

(= MALEID3
   (if (and (= S3 MALE) (< MALEID2 3)) 3
     (if (and (= S4 MALE) (< MALEID2 4)) 4
       (if (and (= S5 MALE) (< MALEID2 5)) 5
         (if (and (= S6 MALE) (< MALEID2 6)) 6
           (if (and (= S7 MALE) (< MALEID2 7)) 7
             -1))))))


;; Create temporary variables for the ages of these females
;; This uses the Sugar 
(int MALEAGE1 MIN_AGE MAX_AGE)
(int MALEAGE2 MIN_AGE MAX_AGE)
(int MALEAGE3 MIN_AGE MAX_AGE)

(< MALEAGE1 MALEAGE2)
(< MALEAGE2 MALEAGE3)
(< MALEAGE3 MALEAGE4)

;; Fix the female ages to the person ages
(element MALEID1 (A1 A2 A3 A4 A5 A6 A7) MALEAGE1)
(element MALEID2 (A1 A2 A3 A4 A5 A6 A7) MALEAGE2)
(element MALEID3 (A1 A2 A3 A4 A5 A6 A7) MALEAGE3)

;; The median is 30
(= MALEAGE2 30)

; average male age: 44
(= (+ (if (= S1 MALE) A1 0)    ; average male age = 44
      (if (= S2 MALE) A2 0)
      (if (= S3 MALE) A3 0)
      (if (= S4 MALE) A4 0)
      (if (= S5 MALE) A5 0)
      (if (= S6 MALE) A6 0)
      (if (= S7 MALE) A7 0)
      )
   (* 3 44))


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; 2C Black.  n=4  median=51  average=48.5

(= (+ (if (= R1 BLACK) 1 0)  
      (if (= R2 BLACK) 1 0)
      (if (= R3 BLACK) 1 0)
      (if (= R4 BLACK) 1 0)
      (if (= R5 BLACK) 1 0)
      (if (= R6 BLACK) 1 0)
      (if (= R7 BLACK) 1 0)
      )
   4) 

;;; Median age of blacks is 51
;;; So the same number are over and under 51
;;; We could tighten this up...
(= (+ (if (and (= R1 BLACK) (= A1 51)) 1 0)
      (if (and (= R2 BLACK) (= A2 51)) 1 0)      
      (if (and (= R3 BLACK) (= A3 51)) 1 0)      
      (if (and (= R4 BLACK) (= A4 51)) 1 0)      
      (if (and (= R5 BLACK) (= A5 51)) 1 0)      
      (if (and (= R6 BLACK) (= A6 51)) 1 0)      
      (if (and (= R7 BLACK) (= A7 51)) 1 0)
      ) 0)

(= (+ (if (and (= R1 BLACK) (< A1 51)) 1 0)
      (if (and (= R2 BLACK) (< A2 51)) 1 0)      
      (if (and (= R3 BLACK) (< A3 51)) 1 0)      
      (if (and (= R4 BLACK) (< A4 51)) 1 0)      
      (if (and (= R5 BLACK) (< A5 51)) 1 0)      
      (if (and (= R6 BLACK) (< A6 51)) 1 0)      
      (if (and (= R7 BLACK) (< A7 51)) 1 0)
      ) 2)

(= (+ (if (and (= R1 BLACK) (> A1 51)) 1 0)
      (if (and (= R2 BLACK) (> A2 51)) 1 0)      
      (if (and (= R3 BLACK) (> A3 51)) 1 0)      
      (if (and (= R4 BLACK) (> A4 51)) 1 0)      
      (if (and (= R5 BLACK) (> A5 51)) 1 0)      
      (if (and (= R6 BLACK) (> A6 51)) 1 0)      
      (if (and (= R7 BLACK) (> A7 51)) 1 0)
      ) 2)


; average black age = 48.5 (x 4 = 194)
(= (+ (if (= R1 BLACK) A1 0)   
      (if (= R2 BLACK) A2 0)
      (if (= R3 BLACK) A3 0)
      (if (= R4 BLACK) A4 0)
      (if (= R5 BLACK) A5 0)
      (if (= R6 BLACK) A6 0)
      (if (= R7 BLACK) A7 0)
      )
   194)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; 2D. White. n=3 median=24, mean=24  (white=1)

(= (+ (if (= R1 WHITE) 1 0)
      (if (= R2 WHITE) 1 0)      
      (if (= R3 WHITE) 1 0)      
      (if (= R4 WHITE) 1 0)      
      (if (= R5 WHITE) 1 0)      
      (if (= R6 WHITE) 1 0)      
      (if (= R7 WHITE) 1 0)
      ) 3)


;;; Median age of whites is 24
(= (+ (if (and (= R1 WHITE) (= A1 24)) 1 0)
      (if (and (= R2 WHITE) (= A2 24)) 1 0)      
      (if (and (= R3 WHITE) (= A3 24)) 1 0)      
      (if (and (= R4 WHITE) (= A4 24)) 1 0)      
      (if (and (= R5 WHITE) (= A5 24)) 1 0)      
      (if (and (= R6 WHITE) (= A6 24)) 1 0)      
      (if (and (= R7 WHITE) (= A7 24)) 1 0)
      ) 1)

(= (+ (if (and (= R1 WHITE) (< A1 24)) 1 0)
      (if (and (= R2 WHITE) (< A2 24)) 1 0)      
      (if (and (= R3 WHITE) (< A3 24)) 1 0)      
      (if (and (= R4 WHITE) (< A4 24)) 1 0)      
      (if (and (= R5 WHITE) (< A5 24)) 1 0)      
      (if (and (= R6 WHITE) (< A6 24)) 1 0)      
      (if (and (= R7 WHITE) (< A7 24)) 1 0)
      ) 1)

(= (+ (if (and (= R1 WHITE) (> A1 24)) 1 0)
      (if (and (= R2 WHITE) (> A2 24)) 1 0)      
      (if (and (= R3 WHITE) (> A3 24)) 1 0)      
      (if (and (= R4 WHITE) (> A4 24)) 1 0)      
      (if (and (= R5 WHITE) (> A5 24)) 1 0)      
      (if (and (= R6 WHITE) (> A6 24)) 1 0)      
      (if (and (= R7 WHITE) (> A7 24)) 1 0)
      ) 1)

(= (+ (if (= R1 WHITE) A1 0)   ; average white age = 72/3 = 24
      (if (= R2 WHITE) A2 0)
      (if (= R3 WHITE) A3 0)
      (if (= R4 WHITE) A4 0)
      (if (= R5 WHITE) A5 0)
      (if (= R6 WHITE) A6 0)
      (if (= R7 WHITE) A7 0)
      )
   (* 3 24))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; 3A. Single Adults
;; n = 3, median = 22, 

#ifdef USE_3A
(= (+ (if (and (= M1 0) (> A1 17)) A1 0)    ; average age of single adults = 
      (if (and (= M2 0) (> A2 17)) A2 0)
      (if (and (= M3 0) (> A3 17)) A3 0)
      (if (and (= M4 0) (> A4 17)) A4 0)
      (if (and (= M5 0) (> A5 17)) A5 0)
      (if (and (= M6 0) (> A6 17)) A6 0)
      (if (and (= M7 0) (> A7 17)) A7 0)
      ) 42)
#endif

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; 3B. Married Adults
;;  n=4, median=51 mean=54

;; Count queries

#ifdef USE_3B
(= (+ (if (= M1 MARRIED) 1 0)    ; average age of single adults = 
      (if (= M2 MARRIED) 1 0)
      (if (= M3 MARRIED) 1 0)
      (if (= M4 MARRIED) 1 0)
      (if (= M5 MARRIED) 1 0)
      (if (= M6 MARRIED) 1 0)
      (if (= M7 MARRIED) 1 0)
      )
   4)

;; Median age of married adults is = 51
;; There are 4, so there are 2 less than 51 and 2 more than 51

(= (+ (if (and (= M1 MARRIED) (< A1 51)) 1 0)
      (if (and (= M2 MARRIED) (< A2 51)) 1 0)      
      (if (and (= M3 MARRIED) (< A3 51)) 1 0)      
      (if (and (= M4 MARRIED) (< A4 51)) 1 0)      
      (if (and (= M5 MARRIED) (< A5 51)) 1 0)      
      (if (and (= M6 MARRIED) (< A6 51)) 1 0)      
      (if (and (= M7 MARRIED) (< A7 51)) 1 0)
      )
   2)

(= (+ (if (and (= M1 MARRIED) (= A1 51)) 1 0)
      (if (and (= M2 MARRIED) (= A2 51)) 1 0)      
      (if (and (= M3 MARRIED) (= A3 51)) 1 0)      
      (if (and (= M4 MARRIED) (= A4 51)) 1 0)      
      (if (and (= M5 MARRIED) (= A5 51)) 1 0)      
      (if (and (= M6 MARRIED) (= A6 51)) 1 0)      
      (if (and (= M7 MARRIED) (= A7 51)) 1 0)
      )
   0)

(= (+ (if (and (= M1 MARRIED) (> A1 51)) 1 0)
      (if (and (= M2 MARRIED) (> A2 51)) 1 0)      
      (if (and (= M3 MARRIED) (> A3 51)) 1 0)      
      (if (and (= M4 MARRIED) (> A4 51)) 1 0)      
      (if (and (= M5 MARRIED) (> A5 51)) 1 0)      
      (if (and (= M6 MARRIED) (> A6 51)) 1 0)      
      (if (and (= M7 MARRIED) (> A7 51)) 1 0)
      )
   2)


;; Mean age = 54

(= (+ (if (and (= M1 MARRIED) (> A1 17)) A1 0)    ; average age of single adults = 
      (if (and (= M2 MARRIED) (> A2 17)) A2 0)
      (if (and (= M3 MARRIED) (> A3 17)) A3 0)
      (if (and (= M4 MARRIED) (> A4 17)) A4 0)
      (if (and (= M5 MARRIED) (> A5 17)) A5 0)
      (if (and (= M6 MARRIED) (> A6 17)) A6 0)
      (if (and (= M7 MARRIED) (> A7 17)) A7 0)
      )
   (* 4 54))
#endif




;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; 4A. Black Females

#ifdef USE_4A
;;; Three black females (R=0, S=0)
(= (+ (if (and (= R1 BLACK) (= S1 FEMALE)) 1 0)
      (if (and (= R2 BLACK) (= S2 FEMALE)) 1 0)   
      (if (and (= R3 BLACK) (= S3 FEMALE)) 1 0)   
      (if (and (= R4 BLACK) (= S4 FEMALE)) 1 0)   
      (if (and (= R5 BLACK) (= S5 FEMALE)) 1 0)   
      (if (and (= R6 BLACK) (= S6 FEMALE)) 1 0)
      (if (and (= R7 BLACK) (= S7 FEMALE)) 1 0)
      ) 3)

;; Median age black females: 36.
;; 
(= (+ (if (and (= R1 BLACK) (= S1 FEMALE) (< A1 36)) 1 0)
      (if (and (= R2 BLACK) (= S2 FEMALE) (< A2 36)) 1 0)      
      (if (and (= R3 BLACK) (= S3 FEMALE) (< A3 36)) 1 0)      
      (if (and (= R4 BLACK) (= S4 FEMALE) (< A4 36)) 1 0)      
      (if (and (= R5 BLACK) (= S5 FEMALE) (< A5 36)) 1 0)      
      (if (and (= R6 BLACK) (= S6 FEMALE) (< A6 36)) 1 0)      
      (if (and (= R7 BLACK) (= S7 FEMALE) (< A7 36)) 1 0)
      )
   1)

(= (+ (if (and (= R1 BLACK) (= S1 FEMALE) (= A1 36)) 1 0)
      (if (and (= R2 BLACK) (= S2 FEMALE) (= A2 36)) 1 0)      
      (if (and (= R3 BLACK) (= S3 FEMALE) (= A3 36)) 1 0)      
      (if (and (= R4 BLACK) (= S4 FEMALE) (= A4 36)) 1 0)      
      (if (and (= R5 BLACK) (= S5 FEMALE) (= A5 36)) 1 0)      
      (if (and (= R6 BLACK) (= S6 FEMALE) (= A6 36)) 1 0)      
      (if (and (= R7 BLACK) (= S7 FEMALE) (= A7 36)) 1 0)
      )
   1)
;
(= (+ (if (and (= R1 BLACK) (= S1 FEMALE) (> A1 36)) 1 0)
      (if (and (= R2 BLACK) (= S2 FEMALE) (> A2 36)) 1 0)      
      (if (and (= R3 BLACK) (= S3 FEMALE) (> A3 36)) 1 0)      
      (if (and (= R4 BLACK) (= S4 FEMALE) (> A4 36)) 1 0)      
      (if (and (= R5 BLACK) (= S5 FEMALE) (> A5 36)) 1 0)      
      (if (and (= R6 BLACK) (= S6 FEMALE) (> A6 36)) 1 0)      
      (if (and (= R7 BLACK) (= S7 FEMALE) (> A7 36)) 1 0)
      )
   1)

;;; Mean age = 36.667; total age is 110
(= (+ (if (and (= R1 BLACK) (= S1 FEMALE)) A1 0)
      (if (and (= R2 BLACK) (= S2 FEMALE)) A2 0)      
      (if (and (= R3 BLACK) (= S3 FEMALE)) A3 0)      
      (if (and (= R4 BLACK) (= S4 FEMALE)) A4 0)      
      (if (and (= R5 BLACK) (= S5 FEMALE)) A5 0)      
      (if (and (= R6 BLACK) (= S6 FEMALE)) A6 0)      
      (if (and (= R7 BLACK) (= S7 FEMALE)) A7 0)
      )
   110)
#endif

;; Statistic 1A. This is a sugar bug; we should not have to put it here.
;(= A4 30)

;; Solution. To verify constraints, uncomment these and everything should satisfy!
;; female=0        black=0   single=0
;; male  =1        white=1   married=1
;; Note that this is the sorted by age
#ifdef USE_SOLUTION
(= S1 0) (= A1  8) (= R1 0) (= M1 0)
(= S2 1) (= A2 18) (= R2 1) (= M2 0)
(= S3 0) (= A3 24) (= R3 1) (= M3 0)
(= S4 1) (= A4 30) (= R4 1) (= M4 1)
(= S5 0) (= A5 36) (= R5 0) (= M5 1)
(= S6 0) (= A6 66) (= R6 0) (= M6 1)
(= S7 1) (= A7 84) (= R7 0) (= M7 1)
#endif


